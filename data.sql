CREATE TABLE balance (
                                id integer PRIMARY KEY,
                                amount_on_balance DECIMAL(10, 2) NOT NULL CHECK (amount_on_balance >= 0),
                                amount_on_reserve DECIMAL(10, 2) NOT NULL CHECK (amount_on_reserve >= 0)
);

CREATE TABLE service (
                                id integer PRIMARY KEY,
                                name text NOT NULL,
                                price DECIMAL(10, 2) CHECK (price >= 0)
);

CREATE TABLE "order" (
                                id integer PRIMARY KEY,
                                balance_id integer NOT NULL,
                                service_id integer NOT NULL,
                                reserve_time timestamp with time zone default (now()) NOT NULL,

                                constraint balance_fk foreign key (balance_id) references balance(id),
                                constraint service_fk foreign key (service_id) references service(id)
);

CREATE TABLE report (
                               id integer generated by default as identity PRIMARY KEY,
                               balance_id integer NOT NULL,
                               service_id integer NOT NULL,
                               amount decimal(10, 2),
                               report_time timestamp with time zone DEFAULT (now()) NOT NULL,

                               constraint balance_fk foreign key (balance_id) references balance(id),
                               constraint service_fk foreign key (service_id) references service(id)

);

CREATE TABLE transaction (
                                    id integer generated by default as identity primary key ,
                                    sender_id integer NOT NULL,
                                    receiver_id integer not null ,
                                    transaction_time timestamp with time zone default (now()) NOT NULL,
                                    transaction_price DECIMAL(10, 2) check (transaction_price > 0),
                                    status integer,
                                    operation_id integer,

                                    constraint sender_fk foreign key (sender_id) references balance(id),
                                    constraint receiver_fk foreign key (receiver_id) references balance(id)

);


create table operation_type (
                                    id integer primary key,
                                    name text
);


comment on column "transaction".status is '1 - canceled, 2 - in processing, 3 - completed ';
comment on column operation_type.name is '1 - Пополнение средств, 2 - Перевод средств, 3 - Оплата улсуги';

insert into operation_type (id, name) VALUES (1, 'Пополнение средств');
insert into operation_type (id, name) VALUES (2, 'Перевод средств');
insert into operation_type (id, name) VALUES (3, 'Оплата услуги');
