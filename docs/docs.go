// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/balance/cancel-order": {
            "patch": {
                "description": "If order was canceled return money from reserved balance to user's balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Cancel order",
                "parameters": [
                    {
                        "description": "cancel pay info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UnmarshallCancel"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/balance/get-balance": {
            "get": {
                "description": "Get balance or create if balance doesn't exist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Get user balance",
                "parameters": [
                    {
                        "description": "id from balance",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UnmarshallGetBalance"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/balance/get-history": {
            "get": {
                "description": "get list of json with user's transactions(sorting by date and amount, pagination).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Get user's transaction history",
                "parameters": [
                    {
                        "description": "history params",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UnmarshallGetTransactionHistory"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/balance/has-passed": {
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Confirm the payment",
                "parameters": [
                    {
                        "description": "pay info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UnmarshallServicePay"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/balance/reserve-from-balance": {
            "patch": {
                "description": "Reserve money from balance to reserved balance until transaction is finished",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Reserve money to pay service",
                "parameters": [
                    {
                        "description": "pay info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UnmarshallServicePay"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/balance/top-up-balance": {
            "post": {
                "description": "Replenish the balance and create trainsaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Replenish the balance",
                "parameters": [
                    {
                        "description": "balance id and amount",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UnmarshallTopUpBalance"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/file/{filename}": {
            "get": {
                "description": "get report file with statistic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Get report file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filename",
                        "name": "filename",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/report/get-link-report": {
            "get": {
                "description": "Create report file and get a link to a report in which statistics on services for profit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Get report link",
                "parameters": [
                    {
                        "description": "date info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UnmarshalGetReport"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "models.UnmarshalGetReport": {
            "type": "object",
            "properties": {
                "year_month": {
                    "type": "string"
                }
            }
        },
        "models.UnmarshallCancel": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "balance_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                }
            }
        },
        "models.UnmarshallGetBalance": {
            "type": "object",
            "properties": {
                "balance_id": {
                    "type": "string"
                }
            }
        },
        "models.UnmarshallGetTransactionHistory": {
            "type": "object",
            "properties": {
                "balance_id": {
                    "type": "string"
                },
                "page": {
                    "type": "string"
                },
                "per_page": {
                    "type": "string"
                },
                "sort_by_amount_order": {
                    "type": "string"
                },
                "sort_by_date_order": {
                    "type": "string"
                }
            }
        },
        "models.UnmarshallServicePay": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "balance_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "service_id": {
                    "type": "string"
                }
            }
        },
        "models.UnmarshallTopUpBalance": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "balance_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Avito Tech Task",
	Description:      "API Server for wallet application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
